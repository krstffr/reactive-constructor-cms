 ✔ Make nested objects (not in an array) removable @done (15-04-17 12:11)
 
 ☐ Write tests!!!

 ☐ The god damn name!!!!

 ✔ How to handle adding of a constructor which has multiple type? @done (15-04-27 21:30)
   ✔ https://github.com/krstffr/reactive-constructor/issues/19!! @done (15-04-24 11:29)
   Just show a list of all the types and let the user select the one she wants!
   ✔ Method in the CMS for exluding/including types for nested stuff! @done (15-04-27 20:04)
   ✔ Also this method for array's of types!! @done (15-04-27 21:30)
   ✔ We need some kind of global "whatever-wants-a-value-from-a-list -> show-overview-of-choises-in-list -> return-the-coice"-function/template. @done (15-04-25 00:16)
   ✔ When creating a worker->wife->husband->wife, then duplication of the highest wife throws an error! @done (15-04-27 17:00)
 
 ☐ Handling of Date's!

 ☐ Saving of data:
   ☐ Avoid 1000000000 backups per "main doc"
   ✔ Add timestamps to saved docs @done (15-04-28 15:05)

 ✔ Fetching of data from DB @done (15-04-28 16:00)
   ☐ UI
   ☐ How to handle the "problem" of getting a DB object in multiple places, which created multiple instances of the same data?
      Keep it all in one place as defined by the plugin? Sort of like a global place for all reactive instances fetched from this plugin?
 
 ☐ Handling of various input types, text/textarea/disabled/select etc.

 ☐ What's the best way to get the current data context in the blur/update value event? Right now using Template.currentData() which means we have to add this event and method to every unique template we might come up with. Not cool!

 ✔ Use the type-name, not the constructor name for stuff (or both?) @done (15-04-24 11:29)

 ☐ How to handle nested "pure" objects? Should that even be allowed? NAH. Not in the CMS! Or? Maybe…

 ☐ Handle duplications

 ☐ Handle deletes

 ☐ Handle links to existing DB objects
   ☐ Updating the link

 ☐ "Top" instances should not have Remove (or Duplicate!) buttons!
   ☐ (Only "array children" should have duplicate)

 ☐ Nested list (array) instances with it's own nested lists looks MESSY